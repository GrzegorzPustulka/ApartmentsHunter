version: '3.8'

services:
  hunter_worker:
    build:
      context: ./hunter
      dockerfile: Dockerfile
    container_name: hunter_worker
    command: poetry run celery -A hunter.celery_app worker --loglevel=info
    volumes:
      - ./hunter:/app
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env

  hunter_beat:
    build:
      context: ./hunter
      dockerfile: Dockerfile
    container_name: hunter_beat
    command: poetry run celery -A hunter.celery_app beat --loglevel=info
    volumes:
      - ./hunter:/app
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env

  pricer:
    build:
      context: ./pricer
      dockerfile: Dockerfile
    container_name: pricer
    command: poetry run celery -A pricer.celery_app worker --loglevel=info
    volumes:
      - ./pricer:/app
    depends_on:
      - rabbitmq
      - redis
    env_file:
      - .env

  writer_worker:
    build:
      context: ./writer
      dockerfile: Dockerfile
    container_name: writer_worker
    command: poetry run celery -A writer.celery_app worker --loglevel=info
    volumes:
      - ./writer:/app
    depends_on:
      - rabbitmq
      - redis
      - postgres
    env_file:
      - .env
  writer:
    build:
      context: ./writer
      dockerfile: Dockerfile
    container_name: writer
    command: poetry run python writer/main.py
    volumes:
      - ./writer:/app
    depends_on:
      - rabbitmq
      - redis
      - postgres
    env_file:
      - .env
  sender:
    build:
      context: ./sender
      dockerfile: Dockerfile
    container_name: sender
    command: poetry run celery -A sender.celery_app worker --loglevel=info
    volumes:
      - ./sender:/app
    depends_on:
      - mailhog
      - rabbitmq
      - redis
    env_file:
      - .env

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  subscriptions:
    build:
      context: ./subscriptions
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: subscriptions
    command: bash -c "alembic upgrade head && poetry run uvicorn subscriptions.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./subscriptions:/app
    depends_on:
      - postgres
      - rabbitmq
      - redis
    env_file:
      - .env

  subscriptions_worker:
    build:
      context: ./subscriptions
      dockerfile: Dockerfile
    container_name: subscriptions_worker
    command: poetry run celery -A subscriptions.celery_app worker --loglevel=info
    volumes:
      - ./subscriptions:/app
    depends_on:
      - rabbitmq
      - redis
      - postgres
    env_file:
      - .env

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SecretPassword
      POSTGRES_DB: database


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
